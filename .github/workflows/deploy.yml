name: Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build application
      run: |
        cd frontend
        npm run build
        
    # Example deployment steps (uncomment and configure as needed)
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: ./frontend
    #     vercel-args: '--prod'
    
    # - name: Deploy to Netlify
    #   uses: nwtgck/actions-netlify@v2.0
    #   with:
    #     publish-dir: './frontend/.next'
    #     production-branch: main
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     deploy-message: "Deploy from GitHub Actions"
    #     enable-pull-request-comment: false
    #     enable-commit-comment: true
    #     overwrites-pull-request-comment: true
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    
    # - name: Deploy to AWS S3
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    #   
    # - name: Deploy to S3
    #   run: |
    #     aws s3 sync frontend/.next s3://your-bucket-name --delete
    #     aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
    
    - name: Notify deployment
      run: |
        echo "Deployment completed successfully!"
        echo "Build artifacts are ready for deployment" 